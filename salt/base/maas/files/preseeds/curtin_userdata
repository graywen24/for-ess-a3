#cloud-config

debconf_selections:
 maas: |
  {{for line in str(curtin_preseed).splitlines()}}
  {{line}}
  {{endfor}}
early_commands:
  00_key: ["mkdir", "-p", "/tmp/alchemy/tmp"]
  01_key: ["mkdir", "-p", "/tmp/alchemy/etc/apt/sources.list.d"]
  02_key: ["wget", "-O", "/tmp/alchemy/tmp/alchemy.key", "http://repo.cde.1nc/maas/alchemy.key"]
  03_key: ["apt-key", "add", "/tmp/alchemy/tmp/alchemy.key"]
#  04_key: ["touch", "/run/block-curtin-poweroff"]
  05_key: ["wget", "-O", "/tmp/partit.sh", "http://repo.cde.1nc/maas/partit.sh"]
  06_key: ["wget", "-O", "/tmp/alchemy/etc/apt/sources.list.d/salt.list", "http://repo.cde.1nc/maas/alchemy-salt.list"]
#  07_key: ["sh", "-c", "echo 'ubuntu:ubuntu' | chpasswd"]
{{if third_party_drivers and driver}}
  {{py: key_string = ''.join(['\\x%x' % x for x in map(ord, driver['key_binary'])])}}
  driver_00_get_key: /bin/echo -en '{{key_string}}' > /tmp/maas-{{driver['package']}}.gpg
  driver_01_add_key: ["apt-key", "add", "/tmp/maas-{{driver['package']}}.gpg"]
  driver_02_add: ["add-apt-repository", "-y", "deb {{driver['repository']}} {{node.get_distro_series()}} main"]
  driver_03_update_install: ["sh", "-c", "apt-get update --quiet && apt-get --assume-yes install {{driver['package']}}"]
  driver_04_load: ["sh", "-c", "depmod && modprobe {{driver['module']}}"]
{{endif}}
late_commands:
  maas: [wget, '--no-proxy', '{{node_disable_pxe_url|escape.shell}}', '--post-data', '{{node_disable_pxe_data|escape.shell}}', '-O', '/dev/null']
{{if third_party_drivers and driver}}
  driver_00_key_get: curtin in-target -- sh -c "/bin/echo -en '{{key_string}}' > /tmp/maas-{{driver['package']}}.gpg"
  driver_02_key_add: ["curtin", "in-target", "--", "apt-key", "add", "/tmp/maas-{{driver['package']}}.gpg"]
  driver_03_add: ["curtin", "in-target", "--", "add-apt-repository", "-y", "deb {{driver['repository']}} {{node.get_distro_series()}} main"]
  driver_04_update_install: ["curtin", "in-target", "--", "apt-get", "update", "--quiet"]
  driver_05_install: ["curtin", "in-target", "--", "apt-get", "-y", "install", "{{driver['package']}}"]
  driver_06_depmod: ["curtin", "in-target", "--", "depmod"]
  driver_07_update_initramfs: ["curtin", "in-target", "--", "update-initramfs", "-u"]
{{endif}}
  00_salt: ["curtin", "in-target", "--", "apt-get", "update", "--quiet"]
  01_salt: ["curtin", "in-target", "--", "apt-get", "-y", "install", "salt-minion"]
  02_salt: curtin in-target -- sh -c "/bin/echo -en '\n\n# point to the salt server for first time registration\n10.1.48.102 salt salt.cde.1nc\n' >> /etc/hosts"
{{if 'partsmall' not in (node.tag_names())}}
  YY_umount: ["umount", "/dev/sda4"]
{{endif}}

curthooks_commands:
  builtin: ["echo", "Curdhooking..."]
  00_keyimport: ["curtin", "in-target", "--", "apt-key", "add", "/tmp/alchemy.key"]
  98_buildin: ["curtin", "curthooks"]

{{if 'partbig' in (node.tag_names())}}
partitioning_commands:
  builtin: ["echo", "Partitioning..."]
  00_partit: /bin/bash /tmp/partit.sh partbig $OUTPUT_FSTAB $TARGET_MOUNT_POINT
{{elif 'partsmall' in (node.tag_names())}}
partitioning_commands:
  builtin: ["echo", "Partitioning..."]
  00_partit: /bin/bash /tmp/partit.sh partsmall $OUTPUT_FSTAB $TARGET_MOUNT_POINT
{{else}}
partitioning_commands:
  builtin: ["echo", "Partitioning..."]
  00_partit: /bin/bash /tmp/partit.sh parttest $OUTPUT_FSTAB $TARGET_MOUNT_POINT
{{endif}}

sources:
  99_local:
    type: file
    uri: cp:///tmp/alchemy

final_commands:
  99_talk: ["echo", "Am_Ende_angelangt"]

power_state:
  mode: reboot

{{if node.split_arch()[0] in {'i386', 'amd64'} }}
apt_mirrors:
  ubuntu_archive: http://{{main_archive_hostname}}{{main_archive_directory}}
  ubuntu_security: http://{{main_archive_hostname}}{{main_archive_directory}}
{{else}}
apt_mirrors:
  ubuntu_archive: http://{{ports_archive_hostname}}{{ports_archive_directory}}
  ubuntu_security: http://{{ports_archive_hostname}}{{ports_archive_directory}}
{{endif}}

